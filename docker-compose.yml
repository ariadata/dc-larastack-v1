version: '3.7'

networks:
  larastack-network:
    external: false
  nginx-proxy-manager:
    external: true

services:
  workspace:
    image: ariadata/php-8.1:fpm-nginx
    container_name: ${COMPOSE_PROJECT_NAME}_workspace
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - './src:/var/www/html'
      - './configs/nginx/:/etc/nginx/custom/'
      - './configs/php/cli-override.ini:/etc/php/8.1/cli/conf.d/99-override.ini'
      - './configs/php/fpm-php-override.ini:/etc/php/8.1/fpm/custom/fpm-php-override.ini'
      - './configs/php/fpm-pool-override.conf:/etc/php/8.1/fpm/pool.d/zz-fpm-pool-override.conf'
      - './logs/php:/var/log/php'
      - './logs/nginx:/var/log/nginx'
    environment:
      TZ: '${DC_TZ}'
      PUID: '${UID:-1000}'
      PGID: '${GID:-1000}'
#    ports:
#      - '${DC_NGINX_HTTP_PORT:-80}:80'
    depends_on:
      - mysql
      - redis
    networks:
      larastack-network:
      nginx-proxy-manager:
        aliases:
          - larastack-v1

  supervisor:
    image: ariadata/php-8.1:supervisor
    container_name: ${COMPOSE_PROJECT_NAME}_supervisor
    restart: unless-stopped
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - './src:/var/www/html'
      - './configs/supervisor/:/etc/supervisor/conf.d'
      - './configs/php/cli-override.ini:/etc/php/8.1/cli/conf.d/99-override.ini'
      - './logs/php:/var/log/php'
      - './logs/supervisor/:/var/log/supervisor'
    environment:
      TZ: '${DC_TZ}'
      PUID: '${UID:-1000}'
      PGID: '${GID:-1000}'
    depends_on:
      - workspace
    networks:
      - larastack-network

  redis:
    image: 'redis:7-bullseye'
    container_name: ${COMPOSE_PROJECT_NAME}_redis
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
#    ports:
#      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - './data/redis:/data'
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      retries: 3
      timeout: 5s
    networks:
      - larastack-network

  mysql:
    image: 'mariadb:10.6'
    container_name: ${COMPOSE_PROJECT_NAME}_mysql
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    command: "--character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci  --default-authentication-plugin=mysql_native_password"
#    ports:
#      - '${MYSQL_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_DB_ROOTPASS}'
      MYSQL_DATABASE: '${MYSQL_DB_NAME}'
      MYSQL_USER: '${MYSQL_DB_USER}'
      MYSQL_PASSWORD: '${MYSQL_DB_PASS}'
      TZ: '${DC_TZ}'
    volumes:
      - './configs/mysql/my-cnf-overrides.cnf:/etc/mysql/conf.d/overrides.cnf'
      - './data/mysql:/var/lib/mysql'
      - './logs/mysql:/var/log/mysql'
    networks:
      - larastack-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-u", "root", "-p${MYSQL_DB_ROOTPASS}" ]
      retries: 3
      timeout: 5s

  pgsql:
    image: 'postgres:14.3'
    container_name: ${COMPOSE_PROJECT_NAME}_pgsql
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
#    ports:
#      - '${PGSQL_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${PGSQL_DB_ROOT_PASSWORD}'
      POSTGRES_DB: '${PGSQL_DB_NAME}'
      POSTGRES_USER: '${PGSQL_DB_USER}'
      POSTGRES_PASSWORD: '${PGSQL_DB_PASS}'
    volumes:
#      - './configs/pgsql/postgresql.conf:/etc/postgresql/postgresql.conf'
#      - './configs/pgsql/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf'
      - './data/pgsql:/var/lib/postgresql/data'
#      - './logs/pgsql:/var/log/postgresql'
#    command: "-c config_file=/etc/postgresql/postgresql.conf"
#    command: ["sh", "-c", "chown 999:999 /var/lib/postgresql/data"]
#    command: /bin/bash -c "mkdir -p /logs && chmod -R 777 /logs && postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs"
#    command: /bin/bash -c "mkdir -p /var/lib/postgresql/data && chown 1000:1000 /var/lib/postgresql/data && chmod -R 777 /var/lib/postgresql/data && postgres"
# https://bytemeta.vip/repo/docker-library/postgres/issues/917
    networks:
      - larastack-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${PGSQL_DB_NAME}", "-U", "${PGSQL_DB_USER}" ]
      retries: 3
      timeout: 5s

  mongo:
    image: 'mongo:5.0-focal'
    container_name: ${COMPOSE_PROJECT_NAME}_mongo
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_DB_USER}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_DB_PASS}'
      TZ: '${DC_TZ}'
#    ports:
#      - '${MONGO_DB_PORT:-27017}:27017'
    volumes:
      - './data/mongo:/data/db'
    networks:
      - larastack-network

  phpmyadmin:
    image: 'phpmyadmin/phpmyadmin:5.1'
    container_name: ${COMPOSE_PROJECT_NAME}_phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_DB_PORT}
    restart: unless-stopped
    ports:
      - '${DC_PHPMYADMIN_HTTP_PORT:-8082}:80'
    networks:
      larastack-network:
      nginx-proxy-manager:
        aliases:
          - larastack-pma

